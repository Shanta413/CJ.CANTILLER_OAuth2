# ============================================================
# ? APPLICATION CONFIGURATION
# ============================================================
spring.application.name=oauth2-profile-app
server.port=8080

# ============================================================
# ? ACTIVE PROFILE
# ============================================================
spring.profiles.active=dev

# ============================================================
# ? SESSION SETTINGS
# ============================================================
server.servlet.session.timeout=30m

# ============================================================
# ? LOGGING (Optional but helpful)
# ============================================================
logging.level.org.springframework.security=INFO
logging.level.com.cantiller.oauth2_profile_app=DEBUG

# ============================================================
# ?? DATABASE CONFIG ? H2
# ============================================================
# H2 Database (in-memory)
spring.datasource.url=jdbc:h2:mem:oauth2db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# Hibernate & JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# ? Naming strategy to keep entity names exactly as defined (e.g., AuthProvider)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# H2 Console (optional, helpful for dev)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ============================================================
# ? POSTGRESQL CONFIG (COMMENTED OUT)
# ============================================================
# spring.datasource.url=jdbc:postgresql://localhost:5432/oauth2_profile_app
# spring.datasource.username=postgres
# spring.datasource.password=admin
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ============================================================
#  OAUTH2 CONFIGURATION  GOOGLE LOGIN
# ============================================================
spring.security.oauth2.client.registration.google.client-id=677025675545-rulp0k3cvmgrome4gudhhiugqbsvn2u3.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# ============================================================
#  OAUTH2 CONFIGURATION  GITHUB LOGIN
# ============================================================
spring.security.oauth2.client.registration.github.client-id=Ov23liV2r7mjBiICaU3S
spring.security.oauth2.client.registration.github.client-secret=c49f0d79a1ae168d9d531fea57f7d02d22391a08
spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.registration.github.client-name=GitHub
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/github
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.github.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.github.provider=github

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id
